public class Referee implements Runnable{
	
	private Queue queue;
	private Communicate comm;
	private Calculate calc;
	private Player[] players;
	
	public Referee(Queue queue, Communicate comm){
		
		this.queue = queue;
		this.comm = comm;
		players = new Player[2];
		
	}

	@Override
	public void run() {
	
			try {
				
				Thread.sleep(1000);
				
				for(int i=0; i<2; i++){
					players[i] = comm.takeMessage();
					queue.queueAdd(players[i]);
					System.out.println("Player " + players[i].getPlayerId() + " Added " + ", Queue size is: " + queue.queueSize());
				}
				
				if(queue.queueSize() == 2){
					calc.result(players[0], players[1]);
					System.out.print("Player " + players[0].getPlayerId() + " (" + players[0].getShape() + ") <-> " + "Player " + players[1].getPlayerId() + " (" + players[1].getShape() + ") ===> ");
					System.out.print("  Player " + ));
				}
				
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
	}
				
}
