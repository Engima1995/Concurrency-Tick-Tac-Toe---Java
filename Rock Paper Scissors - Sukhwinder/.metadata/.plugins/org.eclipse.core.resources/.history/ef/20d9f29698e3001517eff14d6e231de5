import java.util.concurrent.BlockingQueue;

public class Queue {
	
	private boolean isSet = false;
	private BlockingQueue<Player> queue;
	
	public Queue(BlockingQueue<Player> queue){
		this.queue = queue;
	}
	
	public synchronized void putMVar(Player p) throws InterruptedException{
		
		while(isSet){
			try{
				wait();
			}catch(InterruptedException e){}
		}
		
		if(queue.size() == 2){
			isSet = true;
		}
		
		queue.put(p);
		notifyAll();
		
	}
	
	 public synchronized Player takeMVar() throws InterruptedException {
		 
		 while(!isSet){
				try{
					wait();
				}catch(InterruptedException e){}
			}
		
		 	if(queue.size() != 0){
		 		return queue.poll();
		 	}
		 
			isSet = true;
			notifyAll();
			
			return null;
		 
	 }
	 
	 public BlockingQueue<Player> getBlockingQueue(){
		 return queue;
	 }
	
}
